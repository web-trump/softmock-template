[{"/Users/lishengang/my/soft-mock-template/src/index.tsx":"1","/Users/lishengang/my/soft-mock-template/src/reportWebVitals.ts":"2","/Users/lishengang/my/soft-mock-template/src/App.tsx":"3","/Users/lishengang/my/soft-mock-template/src/components/RightArea/index.tsx":"4","/Users/lishengang/my/soft-mock-template/src/components/LeftArea/index.tsx":"5","/Users/lishengang/my/soft-mock-template/src/api/index.ts":"6","/Users/lishengang/my/soft-mock-template/src/api/constant.ts":"7","/Users/lishengang/my/soft-mock-template/src/api/server.ts":"8","/Users/lishengang/my/soft-mock-template/src/components/store.ts":"9","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestHeader/index.tsx":"10","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestCookie/index.tsx":"11","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseBody/index.tsx":"12","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseHeader/index.tsx":"13","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseTs/index.tsx":"14","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestBody/index.tsx":"15","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestTs/index.tsx":"16","/Users/lishengang/my/soft-mock-template/src/utils/index.ts":"17","/Users/lishengang/my/soft-mock-template/src/utils/uuid.ts":"18"},{"size":449,"mtime":1611401949815,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1609753455358,"results":"21","hashOfConfig":"20"},{"size":295,"mtime":1611399151641,"results":"22","hashOfConfig":"20"},{"size":6017,"mtime":1612150812558,"results":"23","hashOfConfig":"20"},{"size":5608,"mtime":1612151245693,"results":"24","hashOfConfig":"20"},{"size":868,"mtime":1612145648589,"results":"25","hashOfConfig":"20"},{"size":179,"mtime":1609989580471,"results":"26","hashOfConfig":"20"},{"size":324,"mtime":1609998730863,"results":"27","hashOfConfig":"20"},{"size":8573,"mtime":1612147970372,"results":"28","hashOfConfig":"20"},{"size":1414,"mtime":1612073674014,"results":"29","hashOfConfig":"20"},{"size":1815,"mtime":1612073685182,"results":"30","hashOfConfig":"20"},{"size":1669,"mtime":1612155954302,"results":"31","hashOfConfig":"20"},{"size":1416,"mtime":1612073631360,"results":"32","hashOfConfig":"20"},{"size":1007,"mtime":1612073646141,"results":"33","hashOfConfig":"20"},{"size":1068,"mtime":1612073696391,"results":"34","hashOfConfig":"20"},{"size":937,"mtime":1612073665075,"results":"35","hashOfConfig":"20"},{"size":42,"mtime":1612142994038,"results":"36","hashOfConfig":"20"},{"size":237,"mtime":1612142941324,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"12xmujw",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lishengang/my/soft-mock-template/src/index.tsx",[],["78","79"],"/Users/lishengang/my/soft-mock-template/src/reportWebVitals.ts",[],"/Users/lishengang/my/soft-mock-template/src/App.tsx",[],"/Users/lishengang/my/soft-mock-template/src/components/RightArea/index.tsx",["80","81"],"/Users/lishengang/my/soft-mock-template/src/components/LeftArea/index.tsx",["82","83","84"],"/Users/lishengang/my/soft-mock-template/src/api/index.ts",[],"/Users/lishengang/my/soft-mock-template/src/api/constant.ts",[],"/Users/lishengang/my/soft-mock-template/src/api/server.ts",[],"/Users/lishengang/my/soft-mock-template/src/components/store.ts",[],"/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestHeader/index.tsx",["85","86","87"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport jsBeautify from \"js-beautify\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport \"codemirror/keymap/sublime\";\nimport \"codemirror/theme/eclipse.css\";\nimport store from \"../../../store\";\n\nimport \"./index.less\";\n\nfunction RequestHeader() {\n  const { currentRequestHeader, currentRequest, theme, updateCurrentRequest } = store;\n  const [value, setValue] = useState<string>(\"\");\n  useEffect(() => {\n    setValue(jsBeautify(JSON.stringify(currentRequestHeader.headers)));\n  }, [currentRequestHeader]);\n  const blurHandle = (instance: any) => {\n    const headersJson = {\n      ...JSON.parse(instance.getValue()),\n      Cookie: currentRequestHeader.cookies,\n    };\n    const headers = Object.keys(headersJson).reduce(\n      (pre: any, next) => [...pre, [next, headersJson[next]]],\n      []\n    );\n    if (currentRequest.request && currentRequest.request.headers) {\n      currentRequest.request.headers = headers;\n    }\n    updateCurrentRequest(currentRequest);\n  };\n  return (\n    <div className=\"header-req-container\">\n      <CodeMirror\n        value={value}\n        options={{\n          theme,\n          keyMap: \"sublime\",\n          mode: \"javascript\",\n        }}\n        onBlur={blurHandle}\n      ></CodeMirror>\n    </div>\n  );\n}\n\nexport default observer(RequestHeader);\n","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestCookie/index.tsx",[],"/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseBody/index.tsx",["88"],"/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseHeader/index.tsx",["89","90","91"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport jsBeautify from \"js-beautify\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport \"codemirror/keymap/sublime\";\nimport \"codemirror/theme/eclipse.css\";\nimport store from \"../../../store\";\n\nimport \"./index.less\";\n\nfunction ResponseHeader() {\n  const [value, setValue] = useState<string>();\n  const { currentResponseHeader, currentRequest, theme, updateCurrentRequest } = store;\n  useEffect(() => {\n    setValue(jsBeautify(JSON.stringify(currentResponseHeader)));\n  }, [currentResponseHeader]);\n  const blurHandle = (instance: any) => {\n    const headersJson = JSON.parse(instance.getValue());\n    const headers = Object.keys(headersJson).reduce(\n      (pre: any, next) => [...pre, [next, headersJson[next]]],\n      []\n    );\n    if (currentRequest.response) {\n      currentRequest.response.headers = headers;\n    } else {\n      currentRequest.response = {\n        headers,\n      };\n    }\n\n    updateCurrentRequest(currentRequest);\n  };\n  return (\n    <div className=\"header-body-container\">\n      <CodeMirror\n        value={value}\n        options={{\n          theme,\n          keyMap: \"sublime\",\n          mode: \"javascript\",\n        }}\n        // onInputRead={changeHandle}\n        onBlur={blurHandle}\n      />\n    </div>\n  );\n}\n\nexport default observer(ResponseHeader);\n","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseTs/index.tsx",[],"/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestBody/index.tsx",["92","93"],"import React, { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { Input } from \"antd\";\nimport jsBeautify from \"js-beautify\";\nimport \"codemirror/keymap/sublime\";\nimport \"codemirror/theme/eclipse.css\";\n\nimport store from \"../../../store\";\nimport \"./index.less\";\n\nfunction parseParams(params: string) {\n  return params.split(\"&\").reduce((pre: any, next) => {\n    const item = next.split(\"=\");\n    pre[item[0]] = item[1];\n    return pre;\n  }, {});\n}\n\nfunction RequestBody() {\n  const { currentRequestBody, theme } = store;\n  const [value, setValue] = useState<string>(\"\");\n  useEffect(() => {\n    setValue(jsBeautify(currentRequestBody));\n  }, [currentRequestBody]);\n  const blurHandle = () => {};\n  return (\n    <div className=\"body-req-container\">\n      <CodeMirror\n        value={value}\n        options={{\n          theme,\n          keyMap: \"sublime\",\n          mode: \"javascript\",\n        }}\n        onBlur={blurHandle}\n      />\n    </div>\n  );\n}\n\nexport default observer(RequestBody);\n","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestTs/index.tsx",[],"/Users/lishengang/my/soft-mock-template/src/utils/index.ts",[],"/Users/lishengang/my/soft-mock-template/src/utils/uuid.ts",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":15},{"ruleId":"98","severity":1,"message":"102","line":3,"column":39,"nodeType":"100","messageId":"101","endLine":3,"endColumn":44},{"ruleId":"98","severity":1,"message":"103","line":13,"column":10,"nodeType":"100","messageId":"101","endLine":13,"endColumn":19},{"ruleId":"98","severity":1,"message":"104","line":19,"column":7,"nodeType":"100","messageId":"101","endLine":19,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":48,"column":6,"nodeType":"107","endLine":48,"endColumn":8,"suggestions":"108"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":15},{"ruleId":"98","severity":1,"message":"102","line":2,"column":17,"nodeType":"100","messageId":"101","endLine":2,"endColumn":22},{"ruleId":"98","severity":1,"message":"109","line":2,"column":24,"nodeType":"100","messageId":"101","endLine":2,"endColumn":30},{"ruleId":"105","severity":1,"message":"110","line":41,"column":6,"nodeType":"107","endLine":41,"endColumn":32,"suggestions":"111"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":15},{"ruleId":"98","severity":1,"message":"102","line":2,"column":17,"nodeType":"100","messageId":"101","endLine":2,"endColumn":22},{"ruleId":"98","severity":1,"message":"109","line":2,"column":24,"nodeType":"100","messageId":"101","endLine":2,"endColumn":30},{"ruleId":"98","severity":1,"message":"102","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":15},{"ruleId":"98","severity":1,"message":"112","line":12,"column":10,"nodeType":"100","messageId":"101","endLine":12,"endColumn":21},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"@typescript-eslint/no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'exception' is defined but never used.","'selectBefore' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUpdates'. Either include it or remove the dependency array.","ArrayExpression",["115"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'codeMode'. Either include it or remove the dependency array.",["116"],"'parseParams' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [getUpdates]",{"range":"121","text":"122"},"Update the dependencies array to be: [response?.html, response, codeMode]",{"range":"123","text":"124"},[1161,1163],"[getUpdates]",[1339,1365],"[response?.html, response, codeMode]"]