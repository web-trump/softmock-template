[{"/Users/lishengang/my/soft-mock-template/src/index.tsx":"1","/Users/lishengang/my/soft-mock-template/src/reportWebVitals.ts":"2","/Users/lishengang/my/soft-mock-template/src/App.tsx":"3","/Users/lishengang/my/soft-mock-template/src/components/RightArea/index.tsx":"4","/Users/lishengang/my/soft-mock-template/src/components/LeftArea/index.tsx":"5","/Users/lishengang/my/soft-mock-template/src/api/index.ts":"6","/Users/lishengang/my/soft-mock-template/src/api/constant.ts":"7","/Users/lishengang/my/soft-mock-template/src/api/server.ts":"8","/Users/lishengang/my/soft-mock-template/src/components/store.ts":"9","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestHeader/index.tsx":"10","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestCookie/index.tsx":"11","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseBody/index.tsx":"12","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseHeader/index.tsx":"13","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseTs/index.tsx":"14","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestBody/index.tsx":"15","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestTs/index.tsx":"16","/Users/lishengang/my/soft-mock-template/src/utils/index.ts":"17","/Users/lishengang/my/soft-mock-template/src/utils/uuid.ts":"18"},{"size":449,"mtime":1611401949815,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1609753455358,"results":"21","hashOfConfig":"20"},{"size":295,"mtime":1611399151641,"results":"22","hashOfConfig":"20"},{"size":6728,"mtime":1612234573128,"results":"23","hashOfConfig":"20"},{"size":5809,"mtime":1612235190778,"results":"24","hashOfConfig":"20"},{"size":986,"mtime":1612167777736,"results":"25","hashOfConfig":"20"},{"size":180,"mtime":1612169735937,"results":"26","hashOfConfig":"20"},{"size":324,"mtime":1609998730863,"results":"27","hashOfConfig":"20"},{"size":9068,"mtime":1612235332367,"results":"28","hashOfConfig":"20"},{"size":1414,"mtime":1612073674014,"results":"29","hashOfConfig":"20"},{"size":1815,"mtime":1612073685182,"results":"30","hashOfConfig":"20"},{"size":2810,"mtime":1612246365678,"results":"31","hashOfConfig":"20"},{"size":1416,"mtime":1612073631360,"results":"32","hashOfConfig":"20"},{"size":1940,"mtime":1612234032725,"results":"33","hashOfConfig":"20"},{"size":1069,"mtime":1612241216259,"results":"34","hashOfConfig":"20"},{"size":937,"mtime":1612073665075,"results":"35","hashOfConfig":"20"},{"size":42,"mtime":1612142994038,"results":"36","hashOfConfig":"20"},{"size":237,"mtime":1612142941324,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"12xmujw",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/lishengang/my/soft-mock-template/src/index.tsx",[],["77","78"],"/Users/lishengang/my/soft-mock-template/src/reportWebVitals.ts",[],"/Users/lishengang/my/soft-mock-template/src/App.tsx",[],"/Users/lishengang/my/soft-mock-template/src/components/RightArea/index.tsx",["79","80"],"/Users/lishengang/my/soft-mock-template/src/components/LeftArea/index.tsx",["81","82","83"],"/Users/lishengang/my/soft-mock-template/src/api/index.ts",[],"/Users/lishengang/my/soft-mock-template/src/api/constant.ts",[],"/Users/lishengang/my/soft-mock-template/src/api/server.ts",[],"/Users/lishengang/my/soft-mock-template/src/components/store.ts",[],"/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestHeader/index.tsx",["84","85","86"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport jsBeautify from \"js-beautify\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport \"codemirror/keymap/sublime\";\nimport \"codemirror/theme/eclipse.css\";\nimport store from \"../../../store\";\n\nimport \"./index.less\";\n\nfunction RequestHeader() {\n  const { currentRequestHeader, currentRequest, theme, updateCurrentRequest } = store;\n  const [value, setValue] = useState<string>(\"\");\n  useEffect(() => {\n    setValue(jsBeautify(JSON.stringify(currentRequestHeader.headers)));\n  }, [currentRequestHeader]);\n  const blurHandle = (instance: any) => {\n    const headersJson = {\n      ...JSON.parse(instance.getValue()),\n      Cookie: currentRequestHeader.cookies,\n    };\n    const headers = Object.keys(headersJson).reduce(\n      (pre: any, next) => [...pre, [next, headersJson[next]]],\n      []\n    );\n    if (currentRequest.request && currentRequest.request.headers) {\n      currentRequest.request.headers = headers;\n    }\n    updateCurrentRequest(currentRequest);\n  };\n  return (\n    <div className=\"header-req-container\">\n      <CodeMirror\n        value={value}\n        options={{\n          theme,\n          keyMap: \"sublime\",\n          mode: \"javascript\",\n        }}\n        onBlur={blurHandle}\n      ></CodeMirror>\n    </div>\n  );\n}\n\nexport default observer(RequestHeader);\n","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestCookie/index.tsx",[],"/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseBody/index.tsx",["87","88"],"/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseHeader/index.tsx",["89","90","91"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport jsBeautify from \"js-beautify\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport \"codemirror/keymap/sublime\";\nimport \"codemirror/theme/eclipse.css\";\nimport store from \"../../../store\";\n\nimport \"./index.less\";\n\nfunction ResponseHeader() {\n  const [value, setValue] = useState<string>();\n  const { currentResponseHeader, currentRequest, theme, updateCurrentRequest } = store;\n  useEffect(() => {\n    setValue(jsBeautify(JSON.stringify(currentResponseHeader)));\n  }, [currentResponseHeader]);\n  const blurHandle = (instance: any) => {\n    const headersJson = JSON.parse(instance.getValue());\n    const headers = Object.keys(headersJson).reduce(\n      (pre: any, next) => [...pre, [next, headersJson[next]]],\n      []\n    );\n    if (currentRequest.response) {\n      currentRequest.response.headers = headers;\n    } else {\n      currentRequest.response = {\n        headers,\n      };\n    }\n\n    updateCurrentRequest(currentRequest);\n  };\n  return (\n    <div className=\"header-body-container\">\n      <CodeMirror\n        value={value}\n        options={{\n          theme,\n          keyMap: \"sublime\",\n          mode: \"javascript\",\n        }}\n        // onInputRead={changeHandle}\n        onBlur={blurHandle}\n      />\n    </div>\n  );\n}\n\nexport default observer(ResponseHeader);\n","/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/ResponseTs/index.tsx",["92","93","94"],"/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestBody/index.tsx",["95","96"],"/Users/lishengang/my/soft-mock-template/src/components/RightArea/components/RequestTs/index.tsx",[],"/Users/lishengang/my/soft-mock-template/src/utils/index.ts",[],"/Users/lishengang/my/soft-mock-template/src/utils/uuid.ts",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":15},{"ruleId":"101","severity":1,"message":"105","line":3,"column":39,"nodeType":"103","messageId":"104","endLine":3,"endColumn":44},{"ruleId":"101","severity":1,"message":"106","line":3,"column":39,"nodeType":"103","messageId":"104","endLine":3,"endColumn":45},{"ruleId":"101","severity":1,"message":"107","line":13,"column":10,"nodeType":"103","messageId":"104","endLine":13,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":39,"column":6,"nodeType":"110","endLine":39,"endColumn":8,"suggestions":"111"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":15},{"ruleId":"101","severity":1,"message":"105","line":2,"column":17,"nodeType":"103","messageId":"104","endLine":2,"endColumn":22},{"ruleId":"101","severity":1,"message":"112","line":2,"column":24,"nodeType":"103","messageId":"104","endLine":2,"endColumn":30},{"ruleId":"101","severity":1,"message":"113","line":28,"column":12,"nodeType":"103","messageId":"104","endLine":28,"endColumn":19},{"ruleId":"108","severity":1,"message":"114","line":67,"column":6,"nodeType":"110","endLine":67,"endColumn":32,"suggestions":"115"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":15},{"ruleId":"101","severity":1,"message":"105","line":2,"column":17,"nodeType":"103","messageId":"104","endLine":2,"endColumn":22},{"ruleId":"101","severity":1,"message":"112","line":2,"column":24,"nodeType":"103","messageId":"104","endLine":2,"endColumn":30},{"ruleId":"108","severity":1,"message":"116","line":32,"column":6,"nodeType":"110","endLine":32,"endColumn":22,"suggestions":"117"},{"ruleId":"108","severity":1,"message":"118","line":51,"column":6,"nodeType":"110","endLine":51,"endColumn":30,"suggestions":"119"},{"ruleId":"108","severity":1,"message":"120","line":51,"column":7,"nodeType":"121","endLine":51,"endColumn":29},{"ruleId":"101","severity":1,"message":"105","line":4,"column":10,"nodeType":"103","messageId":"104","endLine":4,"endColumn":15},{"ruleId":"101","severity":1,"message":"122","line":12,"column":10,"nodeType":"103","messageId":"104","endLine":12,"endColumn":21},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"@typescript-eslint/no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Select' is defined but never used.","'exception' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUpdates'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'Button' is defined but never used.","'menuKey' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'codeMode'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["127"],"React Hook useEffect has missing dependencies: 'updateCurrentRequest' and 'value'. Either include them or remove the dependency array.",["128"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'parseParams' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [getUpdates]",{"range":"137","text":"138"},"Update the dependencies array to be: [response?.html, response, codeMode]",{"range":"139","text":"140"},"Update the dependencies array to be: [currentRequest, value]",{"range":"141","text":"142"},"Update the dependencies array to be: [updateCurrentRequest, value]",{"range":"143","text":"144"},[956,958],"[getUpdates]",[2048,2074],"[response?.html, response, codeMode]",[1046,1062],"[currentRequest, value]",[1560,1584],"[updateCurrentRequest, value]"]